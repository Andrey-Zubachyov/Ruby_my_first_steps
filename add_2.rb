# Сложение и умножение строк
# Addition and multiplication of strings

puts "My name is " + "Andrey" + " and my age is " + "43"

# Умножение срок (умножаются "строки" на число, а не на оборот).Нельзя умножить число ка колличество строк.

puts "10" * 5

=begin
На практике приходится часто умножать `=` или `-` на 80 (стандартная ширина экрана в
символах, принятая за стандарт), чтобы визуально отличить одну часть от другой.
Например:
=end

puts "Your age?"
age = gets
puts "=" * 80
puts "Your age is " + age

# Типы данных
# Data types

Тип объекта 123 - Integer
(целое число). Тип объекта "blabla" - String (строка). Тип любого объекта можно получить добавив в конце `.class`.

=begin
Задание:
Узнайте какой тип данных у `""`. А какой тип данных у `0` (ноль)? Какой тип
данных у минус единицы? Какой тип данных у округленного числа “Пи” `3.14`?
Задание:
Известно, что метод `.class` для любого объекта возвращает результат. REPL
читает (read), выполняет (evaluate) и печатает (print) этот результат на экран. Но если все
в руби объект, то какого типа возвращается сам результат, когда мы пишем `.class`? Вот
этот метод `.class` - результат какого типа он возвращает? Видно ли это из
документации? Проверьте. Попробуйте написать `123.class.class` - первое выражение
`123.class` вернет результат, а следующий `.class` вычислит тип этого результата.
=end

p "".class # => String - Строка

p 0.class # => Integer - Число

p 3.14.class # => Float - Число с плавающей запятой

=begin
Задание:
Известно, что метод `.class` для любого объекта возвращает результат. REPL
читает (read), выполняет (evaluate) и печатает (print) этот результат на экран. Но если все
в руби объект, то какого типа возвращается сам результат, когда мы пишем `.class`? Вот
этот метод `.class` - результат какого типа он возвращает? Видно ли это из
документации? Проверьте. Попробуйте написать `123.class.class` - первое выражение
`123.class` вернет результат, а следующий `.class` вычислит тип этого результата.
=end

p 123.class.class # =>Class




# Все в руби - объект
# Everything in Ruby - Object

Известно, что `123.class` возвращает Integer, `"blabla".class` возвращает String. Но у
объекта (Object) существует также метод `is_a?`, который возвращает истину или ложь,
если передать определенный параметр в этот метод:

p 123.is_a?(Integer) #=> true
p 123.is_a?(Integer) #=> false
p 123.is_a?(Object) #=> true



#Приведение типов
#converting types или type casting

#программа, которая считает, сколько вам месяцев

puts "Your age?"
age = gets #“get string”
age_months = age * 12
puts "Your age is " + age_months
