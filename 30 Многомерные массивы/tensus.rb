=begin
Многомерные массивы
Существуют также многомерные массивы. Если 2D массив это “массив массивов”, то 3D массив это “массив массивов массивов”. Иногда такие массивы называют “тензор”.Пример трехмерного массива:
=end

arr = [
[
	%w(a b c),
	%w(d e f),
	%w(g h i)
],
[
	%w(aa bb cc),
	%w(dd ee ff),
	%w(gg hh ii)
]
]

=begin
Это массив 2 на 3 на 3: два блока, в каждом блоке 3 строки, в каждой строке 3 столбца. Размерность (dimension) массива это просто его свойство. Не обязательно знать размерность каждого массива, важно лишь знать как правильно к нему обратиться. Для обращения к элементу “f” нам нужно написать ` `.
На практике многомерные массивы встречаются очень часто, но обычно в таких массивах также присутствует также другая структура данных - хеш (рассматривается далее). В случае с многомерными массивами нам нужно точно знать индексы определенных элементов. Если добавляется строка или столбец где-нибудь вначале, то индексы смещаются. Поэтому на практике доступ по индексу встречается лишь в простых случаях.
Если массив “миксуется” с хешем, то такую структуру обычно называют JSON (JavaScript
Object Notation), хотя в руби это название выглядит немного необычно - причем тут
JavaScript, ведь это руби! Доступ к значениями хеша осуществляется по ключу (а не по индексу), где ключ обычно какая-нибудь строка.
=end

=begin
Задание: попробуйте создать массив, объявленный выше в pry, и обратиться к элементу “ee”.
=end

arr = [
[
	%w(a b c),
	%w(d e f),
	%w(g h i)
],
[
	%w(aa bb cc),
	%w(dd ee ff),
	%w(gg hh ii)
]
]

arr2 = arr[1][1][1]

puts arr2

# => ee